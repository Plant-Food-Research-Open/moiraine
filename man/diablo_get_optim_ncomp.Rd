% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diablo.R
\name{diablo_get_optim_ncomp}
\alias{diablo_get_optim_ncomp}
\title{Get the optimal ncomp value}
\usage{
diablo_get_optim_ncomp(
  perf_res,
  measure = "Overall.BER",
  distance = "centroids.dist",
  min_ncomp = 1
)
}
\arguments{
\item{perf_res}{The cross-validation results, computed with \code{\link[mixOmics]{perf}}.}

\item{measure}{The error measure for which to obtain the optimal value; possible values are \code{'Overall.ER'}
and \code{'Overall.BER'}. Default value is \code{'Overall.BER'}.}

\item{distance}{The distance metric for which to obtain the optimal value; possible values are \code{'max.dist'},
\code{'centroids.dist'} and \code{'mahalanobis.dist'}. Default value is \code{'centroids.dist'}.}

\item{min_ncomp}{Integer, the minimum \code{ncomp} value to be returned. Default value is 1, i.e. this argument does
not play a role in selecting the \code{comp} value. Can be useful if we want at least 2 latent components for final plots.}
}
\value{
An integer, the optimal value of \code{ncomp} to use for the DIABLO run.
}
\description{
Selects the optimal \code{comp} value (number of components to compute) from a DIABLO cross-validation run,
for a given error measure and distance metric.
}
