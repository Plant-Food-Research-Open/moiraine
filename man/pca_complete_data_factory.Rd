% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multidataset_pca.R
\name{pca_complete_data_factory}
\alias{pca_complete_data_factory}
\title{Target factory for PCA run and missing values imputation on each omics
dataset}
\usage{
pca_complete_data_factory(
  mo_data_target,
  dataset_names = NULL,
  target_name_prefix = "",
  complete_data_name = NULL,
  ...
)
}
\arguments{
\item{mo_data_target}{Symbol, the name of the target containing the
\code{MultiDataSet} object.}

\item{dataset_names}{Character vector, the names of the datasets on which a
PCA should be run. If \code{NULL}, a PCA will be run on all datasets. Default
value is \code{NULL}.}

\item{target_name_prefix}{Character, prefix to add to the name of the targets
created by the factory. Default value is \code{""}.}

\item{complete_data_name}{Character, the name of the target containing the
\code{MultiDataSet} with missing data imputed to be created. If \code{NULL}, will be
selected automatically. Default value is \code{NULL}.}

\item{...}{Further arguments passed to the \code{\link[=run_pca_matrix]{run_pca_matrix()}} function.}
}
\value{
A List of targets. If \code{target_name_prefix = ""} and
\code{complete_data_name = NULL}, the following targets are created:
\itemize{
\item \code{dataset_names_pca}: target containing a character vector that gives the
names of the datasets on which a PCA should be run.
\item \code{dataset_mats_pca}: a dynamic branching target that applies the
\code{\link[=get_dataset_matrix]{get_dataset_matrix()}} function to each dataset specified in \code{dataset_names}.
The results are saved in a list. Note that because it is using dynamic
branching, the names of the list are not meaningful. Rather, use
\code{sapply(pca_pca_runs_listruns_list, attr, "dataset_name")} to assess which
element of the list corresponds to which omics dataset.
\item \code{pca_runs_list}: a dynamic branching target that applies the
\code{\link[=run_pca_matrix]{run_pca_matrix()}} function to each matrix in \code{dataset_mats_pca}. The results
are saved in a list. Note that because it is using dynamic branching, the
names of the list are not meaningful. Rather, use \code{sapply(pca_runs_list, attr, "dataset_name")} to assess which element of the list corresponds to
which omics dataset.
\item \code{complete_set}: a target that returns a \code{MultiDataSet} in which missing
values have been imputed.
}
}
\description{
Creates a list of targets that perform a PCA run for each omics dataset from
a \code{MultiDataSet} object using dynamic branching, and imputes the missing
values in those datasets using the results of the PCA runs.
}
\examples{
\dontrun{
## in the _targets.R
library(moiraine)
list(
  # ... code for importing datasets etc

  ## mo_set is the target containing the MultiDataSet object
  ## Example 1: running a PCA on all datasets
  run_pca_factory(mo_set),

  ## Example 2: running a PCA on 'rnaseq' and 'metabolome' datasets
  run_pca_factory(
    mo_set,
    c("rnaseq", "metabolome"),
    complete_data_name = "mo_data_complete"
  )
)
}
}
