% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_omics_sets.R
\name{create_omics_set}
\alias{create_omics_set}
\title{Create a Biobase set object to store omics data}
\usage{
create_omics_set(
  dataset,
  omics_type = c("phenomics", "genomics", "transcriptomics", "metabolomics"),
  features_metadata = NULL,
  samples_metadata = NULL
)
}
\arguments{
\item{dataset}{Matrix, the omics dataset in matrix form with features as rows
and samples as columns.}

\item{omics_type}{Character, which type of omics data is being stored?
Possible values are \code{'genomics'}, \code{'transcriptomics'}, \code{'metabolomics'} and
\code{'phenomics'}. Use \code{'phenomics'} for any other omics.}

\item{features_metadata}{Data.frame, a feature annotation data-frame with
features as rows and information about the features as columns. The number
of rows and row names must match those of the \code{dataset} matrix.}

\item{samples_metadata}{Data.frame, a samples information data-frame with
samples as rows and information about the samples as columns. The number of
rows and row names must match the number of columns and column names of the
\code{dataset} matrix.}
}
\value{
An object derived from \link[Biobase:class.eSet]{Biobase::eSet}:
\itemize{
\item if \code{omics_type = 'genomics'}: a \link[Biobase:class.SnpSet]{Biobase::SnpSet} object;
\item if \code{omics_type = 'transcriptomics'}: a \link[Biobase:class.ExpressionSet]{Biobase::ExpressionSet}
object.
\item if \code{omics_type = 'metabolomics'}: a \linkS4class{MetabolomeSet} object.
\item if \code{omics_type = 'phenomics'} a \linkS4class{PhenotypeSet} object.
}
}
\description{
Creates a Biobase object to store an omics dataset and associated samples and
features metadata.
}
\examples{
\dontrun{
data_geno <- import_dataset_csv(
"genotype_dataset.csv",
  col_id = "Marker",
  features_as_rows = TRUE
)
geno_info_features <- import_fmetadata_csv(
"genotype_features_info.csv",
  col_id = "Marker"
)
samples_information <- import_smetadata_csv(
"samples_information.csv",
  col_id = "Sample"
)
create_omics_set(
  dataset = data_geno,
  omics_type = "genomics",
  features_metadata = geno_info_features,
  samples_metadata = samples_information
)
}
}
